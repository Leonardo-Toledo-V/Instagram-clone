import Input from "@/components/login/Input";
import Or from "@/components/login/Or";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useRef, useState } from "react";
import { AiFillFacebook } from "react-icons/ai";
import {useRouter } from 'next/router';
import axios from "axios";
import Cookies from 'js-cookie';
import Swal from 'sweetalert2';

function Login() {
  const ref = useRef();
  const router = useRouter();
  const [formData,setFormData] = useState({
    username: '',
    password: ''
  })

  const handleSubmit = async (e) => {
    e.preventDefault();
    const url='http://localhost:3030/auth/login';
      axios.post(url,{
        email: formData.username,
        password: formData.password,
      }).then(function (response){
        const status = response.data.status;
        const value = response.data.data.token;
        const username = response.data.data.username;
          if(status){
            Cookies.set('token', value, { 
              expires: 1,
              domain: "localhost",
              secure: false,
            });
            Cookies.set('tokenUsername', username, { 
              expires: 1,
            });
            Swal.fire({
              icon: 'success',
              title: 'login success',
              showConfirmButton: false,
              timer: 1500
            });
            router.push('/feed');
          }else{
            Swal.fire({
              icon: 'error',
              title: 'User or email are invalid',
              showConfirmButton: false,
              timer: 1500
            });
          }
      }).catch(function (error) {
        console.log(error);
      });
  }

  const images = [
    "img1.png",
    "img2.png",
    "img3.png",
    "img4.png",
  ];

  const enable = formData.username.length >= 5  && formData.password.length >= 8;

  useEffect(() => {
    let images = ref.current.querySelectorAll("img"),
      total = images.length,
      current = 0;
    const imageSlider = () => {
      images[(current > 0 ? current : total) - 1].classList.add("opacity-0");
      images[current].classList.remove("opacity-0");
      current = current === total - 1 ? 0 : current + 1;
    };
    imageSlider();
    let interval = setInterval(imageSlider, 3000);
    return () => {
      clearInterval(interval);
    };
  }, [ref]);



  return (
    
    <div className="w-full h-full flex flex-wrap mt-2  overflow-auto items-center justify-center">
      <Head>
        <title>Instagram</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/instagram.ico" />
      </Head>
      <div className="hidden md:block mr-[32px] relative w-[380px] h-[581px] bg-strokeLinecap bg-[length:468.32px_634.15px] bg-no-repeat bg-[top_left_-46px] bg-phone">
        <div
          className="w-[250px] h-[538px] absolute top-[27px] right-[18px] "
          ref={ref}
        >
          {images.map((image, key) => (
            <img
              key={key}
              className="w-full h-full absolute top-0 left-0 opacity-0 transition-opacity duration-1000 ease-linear"
              src={image}
              alt=""
            />
            
          ))}
        </div>
      </div>

      {/* h-[396px] */}

      <div className="w-[350px] h-[555px] ">
        <div className="p-[20px_40px]   bg-white border-[#dbdbdb] border">
          <a className="flex justify-center mb-[31px] mt-[30px] ">
            <img src="https://links.papareact.com/ocw" />
          </a>
          <form onSubmit={handleSubmit}>
            <Input
              type="text"
              value={formData.username}
              onChange={(e) => setFormData({...formData, username: e.target.value})}
              label="Username or email"
            />
            <Input
              type="password"
              value={formData.password}
              onChange={(e) => setFormData({...formData, password: e.target.value})}
              label="Password"
            />
            <button
              type="submit"
              disabled={!enable}
              className="mb-[22px] disabled:opacity-50 font-semibold w-full bg-[#0095f6] text-white text-sm  rounded h-[30px]"
            >
              Log In
            </button>
            <p className="text-xs ml-2 text-slate-500">* 8 characters for password</p><br/>
            <Or />
            <a className="flex gap-x-1 justify-center items-center mt-[28px] text-sm font-semibold text-facebook">
              <AiFillFacebook size={19} />
              <span className="text-[14px]">Log in with Facebook</span>
            </a>
            <a className="mt-[20px] flex items-center justify-center text-link text-[12px]  ">
              Forgot Password?
            </a>
          </form>
        </div>

        <div className="mt-[10px] text-[14px] bg-white border-[#dbdbdb] h-[63px] border gap-x-1 flex items-center justify-center">
          Don't have an account?{" "}
          <Link href="/register" className="font-semibold text-[#0095f6]">
            {" "}
            Sign up{" "}
          </Link>
        </div>
      </div>
    </div>

  )
}
export default Login;
